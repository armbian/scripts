name: Test inside container

on:

  workflow_dispatch:
    inputs:
      url:
        required: false
        type: string
        default: 'apt.armbian.com'
      package:
        required: false
        type: string
  workflow_call:
    inputs:
      url:
        required: false
        type: string
        default: 'apt.armbian.com'
      package:
        required: false
        type: string

jobs:

  gradle:
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        image: ["debian:buster","debian:bullseye","debian:bookworm","debian:sid","ubuntu:focal","ubuntu:jammy","ubuntu:lunar"]

    name: Test install
    timeout-minutes: 10
    runs-on: ubuntu-latest
    container:
        image: "${{ matrix.image }}"
    steps:

      - name: Checkout Armbian OS Config
        uses: actions/checkout@v4
        with:
          repository: armbian/os
          ref:  main
          clean: false
          fetch-depth: 1
          path: os

      - name: Show
        run: |

          export DEBIAN_FRONTEND=noninteractive
          RELEASE=$(echo "${{ matrix.image }}" | cut -d":" -f2)
          apt update
          apt -y install wget gpg

          # add armbian repository
          wget https://${{ inputs.url }}/armbian.key -O key
          gpg --dearmor < key | tee /usr/share/keyrings/armbian.gpg > /dev/null
          chmod go+r /usr/share/keyrings/armbian.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/armbian.gpg] http://${{ inputs.url }} $RELEASE main ${RELEASE}-utils ${RELEASE}-desktop" | tee /etc/apt/sources.list.d/armbian.list
          apt update -y
          apt upgrade -y

          # install packages / except howdy as its too large
          apt install -y $(cat os/external/projects.csv | grep -v howdy | cut -d"," -f1,4,8 | sort | head -n -1 | grep "all\|${RELEASE}" $EXCLUDE | grep "amd64" | cut -d"," -f1 |paste -sd" " -) ${{ inputs.package }}
